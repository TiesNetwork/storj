// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: multinode.proto

package multinodepb

import (
	context "context"
	fmt "fmt"
	math "math"
	time "time"

	proto "github.com/gogo/protobuf/proto"

	drpc "storj.io/drpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RequestHeader struct {
	ApiKey               []byte   `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestHeader) Reset()         { *m = RequestHeader{} }
func (m *RequestHeader) String() string { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()    {}
func (*RequestHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{0}
}
func (m *RequestHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestHeader.Unmarshal(m, b)
}
func (m *RequestHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestHeader.Marshal(b, m, deterministic)
}
func (m *RequestHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestHeader.Merge(m, src)
}
func (m *RequestHeader) XXX_Size() int {
	return xxx_messageInfo_RequestHeader.Size(m)
}
func (m *RequestHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RequestHeader proto.InternalMessageInfo

func (m *RequestHeader) GetApiKey() []byte {
	if m != nil {
		return m.ApiKey
	}
	return nil
}

type DiskSpaceRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DiskSpaceRequest) Reset()         { *m = DiskSpaceRequest{} }
func (m *DiskSpaceRequest) String() string { return proto.CompactTextString(m) }
func (*DiskSpaceRequest) ProtoMessage()    {}
func (*DiskSpaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{1}
}
func (m *DiskSpaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskSpaceRequest.Unmarshal(m, b)
}
func (m *DiskSpaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskSpaceRequest.Marshal(b, m, deterministic)
}
func (m *DiskSpaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskSpaceRequest.Merge(m, src)
}
func (m *DiskSpaceRequest) XXX_Size() int {
	return xxx_messageInfo_DiskSpaceRequest.Size(m)
}
func (m *DiskSpaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskSpaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiskSpaceRequest proto.InternalMessageInfo

func (m *DiskSpaceRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type DiskSpaceResponse struct {
	Allocated            int64    `protobuf:"varint,1,opt,name=allocated,proto3" json:"allocated,omitempty"`
	UsedPieces           int64    `protobuf:"varint,2,opt,name=used_pieces,json=usedPieces,proto3" json:"used_pieces,omitempty"`
	UsedTrash            int64    `protobuf:"varint,3,opt,name=used_trash,json=usedTrash,proto3" json:"used_trash,omitempty"`
	Free                 int64    `protobuf:"varint,4,opt,name=free,proto3" json:"free,omitempty"`
	Available            int64    `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
	Overused             int64    `protobuf:"varint,6,opt,name=overused,proto3" json:"overused,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskSpaceResponse) Reset()         { *m = DiskSpaceResponse{} }
func (m *DiskSpaceResponse) String() string { return proto.CompactTextString(m) }
func (*DiskSpaceResponse) ProtoMessage()    {}
func (*DiskSpaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{2}
}
func (m *DiskSpaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskSpaceResponse.Unmarshal(m, b)
}
func (m *DiskSpaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskSpaceResponse.Marshal(b, m, deterministic)
}
func (m *DiskSpaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskSpaceResponse.Merge(m, src)
}
func (m *DiskSpaceResponse) XXX_Size() int {
	return xxx_messageInfo_DiskSpaceResponse.Size(m)
}
func (m *DiskSpaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskSpaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiskSpaceResponse proto.InternalMessageInfo

func (m *DiskSpaceResponse) GetAllocated() int64 {
	if m != nil {
		return m.Allocated
	}
	return 0
}

func (m *DiskSpaceResponse) GetUsedPieces() int64 {
	if m != nil {
		return m.UsedPieces
	}
	return 0
}

func (m *DiskSpaceResponse) GetUsedTrash() int64 {
	if m != nil {
		return m.UsedTrash
	}
	return 0
}

func (m *DiskSpaceResponse) GetFree() int64 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *DiskSpaceResponse) GetAvailable() int64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *DiskSpaceResponse) GetOverused() int64 {
	if m != nil {
		return m.Overused
	}
	return 0
}

type BandwidthMonthSummaryRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BandwidthMonthSummaryRequest) Reset()         { *m = BandwidthMonthSummaryRequest{} }
func (m *BandwidthMonthSummaryRequest) String() string { return proto.CompactTextString(m) }
func (*BandwidthMonthSummaryRequest) ProtoMessage()    {}
func (*BandwidthMonthSummaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{3}
}
func (m *BandwidthMonthSummaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BandwidthMonthSummaryRequest.Unmarshal(m, b)
}
func (m *BandwidthMonthSummaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BandwidthMonthSummaryRequest.Marshal(b, m, deterministic)
}
func (m *BandwidthMonthSummaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BandwidthMonthSummaryRequest.Merge(m, src)
}
func (m *BandwidthMonthSummaryRequest) XXX_Size() int {
	return xxx_messageInfo_BandwidthMonthSummaryRequest.Size(m)
}
func (m *BandwidthMonthSummaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BandwidthMonthSummaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BandwidthMonthSummaryRequest proto.InternalMessageInfo

func (m *BandwidthMonthSummaryRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type BandwidthMonthSummaryResponse struct {
	Used                 int64    `protobuf:"varint,1,opt,name=used,proto3" json:"used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BandwidthMonthSummaryResponse) Reset()         { *m = BandwidthMonthSummaryResponse{} }
func (m *BandwidthMonthSummaryResponse) String() string { return proto.CompactTextString(m) }
func (*BandwidthMonthSummaryResponse) ProtoMessage()    {}
func (*BandwidthMonthSummaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{4}
}
func (m *BandwidthMonthSummaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BandwidthMonthSummaryResponse.Unmarshal(m, b)
}
func (m *BandwidthMonthSummaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BandwidthMonthSummaryResponse.Marshal(b, m, deterministic)
}
func (m *BandwidthMonthSummaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BandwidthMonthSummaryResponse.Merge(m, src)
}
func (m *BandwidthMonthSummaryResponse) XXX_Size() int {
	return xxx_messageInfo_BandwidthMonthSummaryResponse.Size(m)
}
func (m *BandwidthMonthSummaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BandwidthMonthSummaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BandwidthMonthSummaryResponse proto.InternalMessageInfo

func (m *BandwidthMonthSummaryResponse) GetUsed() int64 {
	if m != nil {
		return m.Used
	}
	return 0
}

type VersionRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{5}
}
func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (m *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(m, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

func (m *VersionRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type VersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{6}
}
func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type LastContactRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LastContactRequest) Reset()         { *m = LastContactRequest{} }
func (m *LastContactRequest) String() string { return proto.CompactTextString(m) }
func (*LastContactRequest) ProtoMessage()    {}
func (*LastContactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{7}
}
func (m *LastContactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastContactRequest.Unmarshal(m, b)
}
func (m *LastContactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastContactRequest.Marshal(b, m, deterministic)
}
func (m *LastContactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastContactRequest.Merge(m, src)
}
func (m *LastContactRequest) XXX_Size() int {
	return xxx_messageInfo_LastContactRequest.Size(m)
}
func (m *LastContactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LastContactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LastContactRequest proto.InternalMessageInfo

func (m *LastContactRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type LastContactResponse struct {
	LastContact          time.Time `protobuf:"bytes,1,opt,name=last_contact,json=lastContact,proto3,stdtime" json:"last_contact"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LastContactResponse) Reset()         { *m = LastContactResponse{} }
func (m *LastContactResponse) String() string { return proto.CompactTextString(m) }
func (*LastContactResponse) ProtoMessage()    {}
func (*LastContactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{8}
}
func (m *LastContactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastContactResponse.Unmarshal(m, b)
}
func (m *LastContactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastContactResponse.Marshal(b, m, deterministic)
}
func (m *LastContactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastContactResponse.Merge(m, src)
}
func (m *LastContactResponse) XXX_Size() int {
	return xxx_messageInfo_LastContactResponse.Size(m)
}
func (m *LastContactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LastContactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LastContactResponse proto.InternalMessageInfo

func (m *LastContactResponse) GetLastContact() time.Time {
	if m != nil {
		return m.LastContact
	}
	return time.Time{}
}

type ReputationRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	SatelliteId          NodeID         `protobuf:"bytes,2,opt,name=satellite_id,json=satelliteId,proto3,customtype=NodeID" json:"satellite_id"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReputationRequest) Reset()         { *m = ReputationRequest{} }
func (m *ReputationRequest) String() string { return proto.CompactTextString(m) }
func (*ReputationRequest) ProtoMessage()    {}
func (*ReputationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{9}
}
func (m *ReputationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReputationRequest.Unmarshal(m, b)
}
func (m *ReputationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReputationRequest.Marshal(b, m, deterministic)
}
func (m *ReputationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReputationRequest.Merge(m, src)
}
func (m *ReputationRequest) XXX_Size() int {
	return xxx_messageInfo_ReputationRequest.Size(m)
}
func (m *ReputationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReputationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReputationRequest proto.InternalMessageInfo

func (m *ReputationRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type ReputationResponse struct {
	Online               *ReputationResponse_Online `protobuf:"bytes,1,opt,name=online,proto3" json:"online,omitempty"`
	Audit                *ReputationResponse_Audit  `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ReputationResponse) Reset()         { *m = ReputationResponse{} }
func (m *ReputationResponse) String() string { return proto.CompactTextString(m) }
func (*ReputationResponse) ProtoMessage()    {}
func (*ReputationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{10}
}
func (m *ReputationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReputationResponse.Unmarshal(m, b)
}
func (m *ReputationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReputationResponse.Marshal(b, m, deterministic)
}
func (m *ReputationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReputationResponse.Merge(m, src)
}
func (m *ReputationResponse) XXX_Size() int {
	return xxx_messageInfo_ReputationResponse.Size(m)
}
func (m *ReputationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReputationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReputationResponse proto.InternalMessageInfo

func (m *ReputationResponse) GetOnline() *ReputationResponse_Online {
	if m != nil {
		return m.Online
	}
	return nil
}

func (m *ReputationResponse) GetAudit() *ReputationResponse_Audit {
	if m != nil {
		return m.Audit
	}
	return nil
}

type ReputationResponse_Online struct {
	Score                float64  `protobuf:"fixed64,1,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReputationResponse_Online) Reset()         { *m = ReputationResponse_Online{} }
func (m *ReputationResponse_Online) String() string { return proto.CompactTextString(m) }
func (*ReputationResponse_Online) ProtoMessage()    {}
func (*ReputationResponse_Online) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{10, 0}
}
func (m *ReputationResponse_Online) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReputationResponse_Online.Unmarshal(m, b)
}
func (m *ReputationResponse_Online) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReputationResponse_Online.Marshal(b, m, deterministic)
}
func (m *ReputationResponse_Online) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReputationResponse_Online.Merge(m, src)
}
func (m *ReputationResponse_Online) XXX_Size() int {
	return xxx_messageInfo_ReputationResponse_Online.Size(m)
}
func (m *ReputationResponse_Online) XXX_DiscardUnknown() {
	xxx_messageInfo_ReputationResponse_Online.DiscardUnknown(m)
}

var xxx_messageInfo_ReputationResponse_Online proto.InternalMessageInfo

func (m *ReputationResponse_Online) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

type ReputationResponse_Audit struct {
	Score                float64  `protobuf:"fixed64,1,opt,name=score,proto3" json:"score,omitempty"`
	SuspensionScore      float64  `protobuf:"fixed64,2,opt,name=suspension_score,json=suspensionScore,proto3" json:"suspension_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReputationResponse_Audit) Reset()         { *m = ReputationResponse_Audit{} }
func (m *ReputationResponse_Audit) String() string { return proto.CompactTextString(m) }
func (*ReputationResponse_Audit) ProtoMessage()    {}
func (*ReputationResponse_Audit) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{10, 1}
}
func (m *ReputationResponse_Audit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReputationResponse_Audit.Unmarshal(m, b)
}
func (m *ReputationResponse_Audit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReputationResponse_Audit.Marshal(b, m, deterministic)
}
func (m *ReputationResponse_Audit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReputationResponse_Audit.Merge(m, src)
}
func (m *ReputationResponse_Audit) XXX_Size() int {
	return xxx_messageInfo_ReputationResponse_Audit.Size(m)
}
func (m *ReputationResponse_Audit) XXX_DiscardUnknown() {
	xxx_messageInfo_ReputationResponse_Audit.DiscardUnknown(m)
}

var xxx_messageInfo_ReputationResponse_Audit proto.InternalMessageInfo

func (m *ReputationResponse_Audit) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ReputationResponse_Audit) GetSuspensionScore() float64 {
	if m != nil {
		return m.SuspensionScore
	}
	return 0
}

type TrustedSatellitesRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TrustedSatellitesRequest) Reset()         { *m = TrustedSatellitesRequest{} }
func (m *TrustedSatellitesRequest) String() string { return proto.CompactTextString(m) }
func (*TrustedSatellitesRequest) ProtoMessage()    {}
func (*TrustedSatellitesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{11}
}
func (m *TrustedSatellitesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrustedSatellitesRequest.Unmarshal(m, b)
}
func (m *TrustedSatellitesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrustedSatellitesRequest.Marshal(b, m, deterministic)
}
func (m *TrustedSatellitesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrustedSatellitesRequest.Merge(m, src)
}
func (m *TrustedSatellitesRequest) XXX_Size() int {
	return xxx_messageInfo_TrustedSatellitesRequest.Size(m)
}
func (m *TrustedSatellitesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrustedSatellitesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrustedSatellitesRequest proto.InternalMessageInfo

func (m *TrustedSatellitesRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type TrustedSatellitesResponse struct {
	TrustedSatellites    []*TrustedSatellitesResponse_NodeURL `protobuf:"bytes,1,rep,name=trusted_satellites,json=trustedSatellites,proto3" json:"trusted_satellites,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *TrustedSatellitesResponse) Reset()         { *m = TrustedSatellitesResponse{} }
func (m *TrustedSatellitesResponse) String() string { return proto.CompactTextString(m) }
func (*TrustedSatellitesResponse) ProtoMessage()    {}
func (*TrustedSatellitesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{12}
}
func (m *TrustedSatellitesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrustedSatellitesResponse.Unmarshal(m, b)
}
func (m *TrustedSatellitesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrustedSatellitesResponse.Marshal(b, m, deterministic)
}
func (m *TrustedSatellitesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrustedSatellitesResponse.Merge(m, src)
}
func (m *TrustedSatellitesResponse) XXX_Size() int {
	return xxx_messageInfo_TrustedSatellitesResponse.Size(m)
}
func (m *TrustedSatellitesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrustedSatellitesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrustedSatellitesResponse proto.InternalMessageInfo

func (m *TrustedSatellitesResponse) GetTrustedSatellites() []*TrustedSatellitesResponse_NodeURL {
	if m != nil {
		return m.TrustedSatellites
	}
	return nil
}

type TrustedSatellitesResponse_NodeURL struct {
	NodeId               NodeID   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3,customtype=NodeID" json:"node_id"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrustedSatellitesResponse_NodeURL) Reset()         { *m = TrustedSatellitesResponse_NodeURL{} }
func (m *TrustedSatellitesResponse_NodeURL) String() string { return proto.CompactTextString(m) }
func (*TrustedSatellitesResponse_NodeURL) ProtoMessage()    {}
func (*TrustedSatellitesResponse_NodeURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{12, 0}
}
func (m *TrustedSatellitesResponse_NodeURL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrustedSatellitesResponse_NodeURL.Unmarshal(m, b)
}
func (m *TrustedSatellitesResponse_NodeURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrustedSatellitesResponse_NodeURL.Marshal(b, m, deterministic)
}
func (m *TrustedSatellitesResponse_NodeURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrustedSatellitesResponse_NodeURL.Merge(m, src)
}
func (m *TrustedSatellitesResponse_NodeURL) XXX_Size() int {
	return xxx_messageInfo_TrustedSatellitesResponse_NodeURL.Size(m)
}
func (m *TrustedSatellitesResponse_NodeURL) XXX_DiscardUnknown() {
	xxx_messageInfo_TrustedSatellitesResponse_NodeURL.DiscardUnknown(m)
}

var xxx_messageInfo_TrustedSatellitesResponse_NodeURL proto.InternalMessageInfo

func (m *TrustedSatellitesResponse_NodeURL) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type EarnedRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EarnedRequest) Reset()         { *m = EarnedRequest{} }
func (m *EarnedRequest) String() string { return proto.CompactTextString(m) }
func (*EarnedRequest) ProtoMessage()    {}
func (*EarnedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{13}
}
func (m *EarnedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EarnedRequest.Unmarshal(m, b)
}
func (m *EarnedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EarnedRequest.Marshal(b, m, deterministic)
}
func (m *EarnedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EarnedRequest.Merge(m, src)
}
func (m *EarnedRequest) XXX_Size() int {
	return xxx_messageInfo_EarnedRequest.Size(m)
}
func (m *EarnedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EarnedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EarnedRequest proto.InternalMessageInfo

func (m *EarnedRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type EarnedResponse struct {
	Total                int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EarnedResponse) Reset()         { *m = EarnedResponse{} }
func (m *EarnedResponse) String() string { return proto.CompactTextString(m) }
func (*EarnedResponse) ProtoMessage()    {}
func (*EarnedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{14}
}
func (m *EarnedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EarnedResponse.Unmarshal(m, b)
}
func (m *EarnedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EarnedResponse.Marshal(b, m, deterministic)
}
func (m *EarnedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EarnedResponse.Merge(m, src)
}
func (m *EarnedResponse) XXX_Size() int {
	return xxx_messageInfo_EarnedResponse.Size(m)
}
func (m *EarnedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EarnedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EarnedResponse proto.InternalMessageInfo

func (m *EarnedResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type EarnedPerSatelliteRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EarnedPerSatelliteRequest) Reset()         { *m = EarnedPerSatelliteRequest{} }
func (m *EarnedPerSatelliteRequest) String() string { return proto.CompactTextString(m) }
func (*EarnedPerSatelliteRequest) ProtoMessage()    {}
func (*EarnedPerSatelliteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{15}
}
func (m *EarnedPerSatelliteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EarnedPerSatelliteRequest.Unmarshal(m, b)
}
func (m *EarnedPerSatelliteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EarnedPerSatelliteRequest.Marshal(b, m, deterministic)
}
func (m *EarnedPerSatelliteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EarnedPerSatelliteRequest.Merge(m, src)
}
func (m *EarnedPerSatelliteRequest) XXX_Size() int {
	return xxx_messageInfo_EarnedPerSatelliteRequest.Size(m)
}
func (m *EarnedPerSatelliteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EarnedPerSatelliteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EarnedPerSatelliteRequest proto.InternalMessageInfo

func (m *EarnedPerSatelliteRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type EarnedPerSatelliteResponse struct {
	EarnedSatellite      []*EarnedSatellite `protobuf:"bytes,1,rep,name=earned_satellite,json=earnedSatellite,proto3" json:"earned_satellite,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EarnedPerSatelliteResponse) Reset()         { *m = EarnedPerSatelliteResponse{} }
func (m *EarnedPerSatelliteResponse) String() string { return proto.CompactTextString(m) }
func (*EarnedPerSatelliteResponse) ProtoMessage()    {}
func (*EarnedPerSatelliteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{16}
}
func (m *EarnedPerSatelliteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EarnedPerSatelliteResponse.Unmarshal(m, b)
}
func (m *EarnedPerSatelliteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EarnedPerSatelliteResponse.Marshal(b, m, deterministic)
}
func (m *EarnedPerSatelliteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EarnedPerSatelliteResponse.Merge(m, src)
}
func (m *EarnedPerSatelliteResponse) XXX_Size() int {
	return xxx_messageInfo_EarnedPerSatelliteResponse.Size(m)
}
func (m *EarnedPerSatelliteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EarnedPerSatelliteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EarnedPerSatelliteResponse proto.InternalMessageInfo

func (m *EarnedPerSatelliteResponse) GetEarnedSatellite() []*EarnedSatellite {
	if m != nil {
		return m.EarnedSatellite
	}
	return nil
}

type EarnedSatellite struct {
	Total                int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	SatelliteId          NodeID   `protobuf:"bytes,2,opt,name=satellite_id,json=satelliteId,proto3,customtype=NodeID" json:"satellite_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EarnedSatellite) Reset()         { *m = EarnedSatellite{} }
func (m *EarnedSatellite) String() string { return proto.CompactTextString(m) }
func (*EarnedSatellite) ProtoMessage()    {}
func (*EarnedSatellite) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a45fd79b06f3a1b, []int{17}
}
func (m *EarnedSatellite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EarnedSatellite.Unmarshal(m, b)
}
func (m *EarnedSatellite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EarnedSatellite.Marshal(b, m, deterministic)
}
func (m *EarnedSatellite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EarnedSatellite.Merge(m, src)
}
func (m *EarnedSatellite) XXX_Size() int {
	return xxx_messageInfo_EarnedSatellite.Size(m)
}
func (m *EarnedSatellite) XXX_DiscardUnknown() {
	xxx_messageInfo_EarnedSatellite.DiscardUnknown(m)
}

var xxx_messageInfo_EarnedSatellite proto.InternalMessageInfo

func (m *EarnedSatellite) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*RequestHeader)(nil), "multinode.RequestHeader")
	proto.RegisterType((*DiskSpaceRequest)(nil), "multinode.DiskSpaceRequest")
	proto.RegisterType((*DiskSpaceResponse)(nil), "multinode.DiskSpaceResponse")
	proto.RegisterType((*BandwidthMonthSummaryRequest)(nil), "multinode.BandwidthMonthSummaryRequest")
	proto.RegisterType((*BandwidthMonthSummaryResponse)(nil), "multinode.BandwidthMonthSummaryResponse")
	proto.RegisterType((*VersionRequest)(nil), "multinode.VersionRequest")
	proto.RegisterType((*VersionResponse)(nil), "multinode.VersionResponse")
	proto.RegisterType((*LastContactRequest)(nil), "multinode.LastContactRequest")
	proto.RegisterType((*LastContactResponse)(nil), "multinode.LastContactResponse")
	proto.RegisterType((*ReputationRequest)(nil), "multinode.ReputationRequest")
	proto.RegisterType((*ReputationResponse)(nil), "multinode.ReputationResponse")
	proto.RegisterType((*ReputationResponse_Online)(nil), "multinode.ReputationResponse.Online")
	proto.RegisterType((*ReputationResponse_Audit)(nil), "multinode.ReputationResponse.Audit")
	proto.RegisterType((*TrustedSatellitesRequest)(nil), "multinode.TrustedSatellitesRequest")
	proto.RegisterType((*TrustedSatellitesResponse)(nil), "multinode.TrustedSatellitesResponse")
	proto.RegisterType((*TrustedSatellitesResponse_NodeURL)(nil), "multinode.TrustedSatellitesResponse.NodeURL")
	proto.RegisterType((*EarnedRequest)(nil), "multinode.EarnedRequest")
	proto.RegisterType((*EarnedResponse)(nil), "multinode.EarnedResponse")
	proto.RegisterType((*EarnedPerSatelliteRequest)(nil), "multinode.EarnedPerSatelliteRequest")
	proto.RegisterType((*EarnedPerSatelliteResponse)(nil), "multinode.EarnedPerSatelliteResponse")
	proto.RegisterType((*EarnedSatellite)(nil), "multinode.EarnedSatellite")
}

func init() { proto.RegisterFile("multinode.proto", fileDescriptor_9a45fd79b06f3a1b) }

var fileDescriptor_9a45fd79b06f3a1b = []byte{
	// 895 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x5f, 0x73, 0xdb, 0x44,
	0x10, 0x47, 0x49, 0x2c, 0xd7, 0x6b, 0x37, 0x4e, 0x8e, 0xce, 0xa0, 0x88, 0xa4, 0xee, 0xa8, 0x81,
	0x86, 0x81, 0x91, 0xc1, 0x7d, 0x62, 0x06, 0x66, 0xa8, 0x49, 0x4b, 0x33, 0xb8, 0x10, 0xe4, 0xc0,
	0x43, 0x99, 0xa9, 0xe7, 0x62, 0x6d, 0x1d, 0x51, 0x59, 0x27, 0x74, 0xa7, 0x40, 0xbe, 0x05, 0x9f,
	0x83, 0x2f, 0xc1, 0xf0, 0xc2, 0xf0, 0x19, 0x78, 0x28, 0x1f, 0x83, 0x57, 0x46, 0x77, 0x27, 0x59,
	0x8e, 0x65, 0x87, 0x31, 0x6f, 0xda, 0xdd, 0xdf, 0xfe, 0x76, 0x6f, 0xff, 0x09, 0xda, 0xd3, 0x34,
	0x14, 0x41, 0xc4, 0x7c, 0x74, 0xe3, 0x84, 0x09, 0x46, 0x1a, 0x85, 0xc2, 0x86, 0x09, 0x9b, 0x30,
	0xa5, 0xb6, 0x3b, 0x13, 0xc6, 0x26, 0x21, 0x76, 0xa5, 0x74, 0x9e, 0xbe, 0xec, 0x8a, 0x60, 0x8a,
	0x5c, 0xd0, 0x69, 0xac, 0x00, 0xce, 0x11, 0xdc, 0xf6, 0xf0, 0xc7, 0x14, 0xb9, 0x78, 0x8a, 0xd4,
	0xc7, 0x84, 0xbc, 0x05, 0x75, 0x1a, 0x07, 0xa3, 0x57, 0x78, 0x65, 0x19, 0xf7, 0x8c, 0xa3, 0x96,
	0x67, 0xd2, 0x38, 0xf8, 0x12, 0xaf, 0x9c, 0x63, 0xd8, 0x39, 0x0e, 0xf8, 0xab, 0x61, 0x4c, 0xc7,
	0xa8, 0x5d, 0xc8, 0x87, 0x60, 0x5e, 0x48, 0x37, 0x89, 0x6d, 0xf6, 0x2c, 0x77, 0x96, 0xd7, 0x1c,
	0xad, 0xa7, 0x71, 0xce, 0x6f, 0x06, 0xec, 0x96, 0x68, 0x78, 0xcc, 0x22, 0x8e, 0x64, 0x1f, 0x1a,
	0x34, 0x0c, 0xd9, 0x98, 0x0a, 0xf4, 0x25, 0xd5, 0xa6, 0x37, 0x53, 0x90, 0x0e, 0x34, 0x53, 0x8e,
	0xfe, 0x28, 0x0e, 0x70, 0x8c, 0xdc, 0xda, 0x90, 0x76, 0xc8, 0x54, 0xa7, 0x52, 0x43, 0x0e, 0x40,
	0x4a, 0x23, 0x91, 0x50, 0x7e, 0x61, 0x6d, 0x2a, 0xff, 0x4c, 0x73, 0x96, 0x29, 0x08, 0x81, 0xad,
	0x97, 0x09, 0xa2, 0xb5, 0x25, 0x0d, 0xf2, 0x5b, 0x46, 0xbc, 0xa4, 0x41, 0x48, 0xcf, 0x43, 0xb4,
	0x6a, 0x3a, 0x62, 0xae, 0x20, 0x36, 0xdc, 0x62, 0x97, 0x98, 0x64, 0x14, 0x96, 0x29, 0x8d, 0x85,
	0xec, 0x9c, 0xc2, 0x7e, 0x9f, 0x46, 0xfe, 0x4f, 0x81, 0x2f, 0x2e, 0x9e, 0xb1, 0x48, 0x5c, 0x0c,
	0xd3, 0xe9, 0x94, 0x26, 0x57, 0xeb, 0xd7, 0xe4, 0x21, 0x1c, 0x2c, 0x61, 0xd4, 0xe5, 0x21, 0xb0,
	0x25, 0x53, 0x51, 0x95, 0x91, 0xdf, 0x4e, 0x1f, 0xb6, 0xbf, 0xc3, 0x84, 0x07, 0x2c, 0x5a, 0x3f,
	0xf0, 0xfb, 0xd0, 0x2e, 0x38, 0x74, 0x28, 0x0b, 0xea, 0x97, 0x4a, 0x25, 0x59, 0x1a, 0x5e, 0x2e,
	0x3a, 0x4f, 0x80, 0x0c, 0x28, 0x17, 0x9f, 0xb3, 0x48, 0xd0, 0xb1, 0x58, 0x3f, 0xe8, 0x0b, 0x78,
	0x73, 0x8e, 0x47, 0x07, 0xfe, 0x02, 0x5a, 0x21, 0xe5, 0x62, 0x34, 0x56, 0x7a, 0x4d, 0x67, 0xbb,
	0x6a, 0x80, 0xdd, 0x7c, 0x80, 0xdd, 0xb3, 0x7c, 0x80, 0xfb, 0xb7, 0xfe, 0x7c, 0xdd, 0x79, 0xe3,
	0x97, 0xbf, 0x3b, 0x86, 0xd7, 0x0c, 0x67, 0x84, 0xce, 0xcf, 0xb0, 0xeb, 0x61, 0x9c, 0x0a, 0x2a,
	0xfe, 0x4f, 0x6d, 0xc8, 0x47, 0xd0, 0xe2, 0x54, 0x60, 0x18, 0x06, 0x02, 0x47, 0x81, 0x2f, 0xa7,
	0xae, 0xd5, 0xdf, 0xce, 0x62, 0xfe, 0xf5, 0xba, 0x63, 0x7e, 0xc5, 0x7c, 0x3c, 0x39, 0xf6, 0x9a,
	0x05, 0xe6, 0xc4, 0x77, 0xfe, 0x31, 0x80, 0x94, 0x43, 0xeb, 0x97, 0x7d, 0x02, 0x26, 0x8b, 0xc2,
	0x20, 0x42, 0x1d, 0xfb, 0x70, 0x2e, 0xf6, 0x75, 0xb8, 0xfb, 0xb5, 0xc4, 0x7a, 0xda, 0x87, 0x7c,
	0x0c, 0x35, 0x9a, 0xfa, 0x81, 0x90, 0x09, 0x34, 0x7b, 0xf7, 0x57, 0x3b, 0x3f, 0xca, 0xa0, 0x9e,
	0xf2, 0xb0, 0xef, 0x82, 0xa9, 0xc8, 0xc8, 0x1d, 0xa8, 0xf1, 0x31, 0x4b, 0x54, 0x06, 0x86, 0xa7,
	0x04, 0xfb, 0x29, 0xd4, 0x24, 0xbe, 0xda, 0x4c, 0xde, 0x83, 0x1d, 0x9e, 0xf2, 0x18, 0xa3, 0xac,
	0xfd, 0x23, 0x05, 0xd8, 0x90, 0x80, 0xf6, 0x4c, 0x3f, 0xcc, 0xd4, 0xce, 0x00, 0xac, 0xb3, 0x24,
	0xe5, 0x02, 0xfd, 0x61, 0x5e, 0x0f, 0xbe, 0xfe, 0x84, 0xfc, 0x61, 0xc0, 0x5e, 0x05, 0x9d, 0x2e,
	0xe7, 0xf7, 0x40, 0x84, 0x32, 0x8e, 0x8a, 0xe2, 0x73, 0xcb, 0xb8, 0xb7, 0x79, 0xd4, 0xec, 0x7d,
	0x50, 0xe2, 0x5e, 0xca, 0xe0, 0x66, 0xbd, 0xfb, 0xd6, 0x1b, 0x78, 0xbb, 0xe2, 0x3a, 0xc4, 0x1e,
	0x40, 0x5d, 0x5b, 0xc9, 0x03, 0xa8, 0x67, 0x3c, 0x59, 0xef, 0x8d, 0xca, 0xde, 0x9b, 0x99, 0xf9,
	0xc4, 0xcf, 0x56, 0x86, 0xfa, 0x7e, 0x82, 0x5c, 0x9d, 0xa6, 0x86, 0x97, 0x8b, 0xce, 0x23, 0xb8,
	0xfd, 0x98, 0x26, 0x11, 0xfa, 0xeb, 0xd7, 0xe2, 0x5d, 0xd8, 0xce, 0x29, 0xf4, 0xfb, 0xef, 0x40,
	0x4d, 0x30, 0x41, 0x43, 0x7d, 0x0d, 0x94, 0xe0, 0x3c, 0x83, 0x3d, 0x85, 0x3b, 0xc5, 0xa4, 0x78,
	0xcf, 0xfa, 0x61, 0xc7, 0x60, 0x57, 0xd1, 0xe9, 0x14, 0x1e, 0xc3, 0x0e, 0x4a, 0xeb, 0xac, 0x03,
	0xba, 0x01, 0x76, 0x89, 0x59, 0x11, 0xcc, 0xbc, 0xdb, 0x38, 0xaf, 0x70, 0x9e, 0x43, 0xfb, 0x1a,
	0xa6, 0xfa, 0x71, 0x6b, 0xec, 0x62, 0xef, 0x1b, 0xa8, 0x0f, 0x05, 0x4b, 0xe8, 0x04, 0xc9, 0x13,
	0x68, 0x14, 0x7f, 0x1c, 0xf2, 0x76, 0x29, 0xc1, 0xeb, 0xbf, 0x33, 0x7b, 0xbf, 0xda, 0xa8, 0x5e,
	0xdd, 0x8b, 0xa0, 0x51, 0x9c, 0x69, 0x42, 0xa1, 0x55, 0x3e, 0xd5, 0xe4, 0x41, 0xc9, 0x75, 0xd5,
	0xef, 0xc1, 0x3e, 0xba, 0x19, 0xa8, 0xe3, 0xfd, 0xbe, 0x01, 0x5b, 0xd9, 0xd3, 0xc8, 0x67, 0x50,
	0xd7, 0x67, 0x9a, 0xec, 0x95, 0xbc, 0xe7, 0xcf, 0xbf, 0x6d, 0x57, 0x99, 0x74, 0xc3, 0x06, 0xd0,
	0x2c, 0xdd, 0x5c, 0x72, 0x50, 0x82, 0x2e, 0xde, 0x74, 0xfb, 0xee, 0x32, 0xb3, 0x66, 0x3b, 0x01,
	0x98, 0x9d, 0x1e, 0xb2, 0xbf, 0xe4, 0x22, 0x29, 0xae, 0x83, 0x95, 0xf7, 0x8a, 0xbc, 0x80, 0xdd,
	0x85, 0x3d, 0x25, 0xf7, 0x57, 0x6f, 0xb1, 0x22, 0x3e, 0xfc, 0x2f, 0xab, 0xde, 0xfb, 0xd5, 0x00,
	0xf3, 0x94, 0x5e, 0xb1, 0x54, 0x90, 0x4f, 0xc1, 0x54, 0xd3, 0x46, 0xac, 0x85, 0x21, 0xcd, 0x49,
	0xf7, 0x2a, 0x2c, 0x3a, 0x53, 0x0a, 0x64, 0x71, 0x23, 0xc8, 0xe1, 0x82, 0x43, 0xc5, 0xfe, 0xd9,
	0xef, 0xdc, 0x80, 0x52, 0x21, 0xfa, 0x87, 0xcf, 0x1d, 0x2e, 0x58, 0xf2, 0x83, 0x1b, 0xb0, 0xae,
	0xfc, 0xe8, 0xc6, 0x49, 0x70, 0x49, 0x05, 0x76, 0x0b, 0xf7, 0xf8, 0xfc, 0xdc, 0x94, 0xbf, 0xc2,
	0x87, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x3f, 0xac, 0xd3, 0x03, 0x0a, 0x00, 0x00,
}

// --- DRPC BEGIN ---

type DRPCStorageClient interface {
	DRPCConn() drpc.Conn

	DiskSpace(ctx context.Context, in *DiskSpaceRequest) (*DiskSpaceResponse, error)
}

type drpcStorageClient struct {
	cc drpc.Conn
}

func NewDRPCStorageClient(cc drpc.Conn) DRPCStorageClient {
	return &drpcStorageClient{cc}
}

func (c *drpcStorageClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcStorageClient) DiskSpace(ctx context.Context, in *DiskSpaceRequest) (*DiskSpaceResponse, error) {
	out := new(DiskSpaceResponse)
	err := c.cc.Invoke(ctx, "/multinode.Storage/DiskSpace", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCStorageServer interface {
	DiskSpace(context.Context, *DiskSpaceRequest) (*DiskSpaceResponse, error)
}

type DRPCStorageDescription struct{}

func (DRPCStorageDescription) NumMethods() int { return 1 }

func (DRPCStorageDescription) Method(n int) (string, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/multinode.Storage/DiskSpace",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCStorageServer).
					DiskSpace(
						ctx,
						in1.(*DiskSpaceRequest),
					)
			}, DRPCStorageServer.DiskSpace, true
	default:
		return "", nil, nil, false
	}
}

func DRPCRegisterStorage(mux drpc.Mux, impl DRPCStorageServer) error {
	return mux.Register(impl, DRPCStorageDescription{})
}

type DRPCStorage_DiskSpaceStream interface {
	drpc.Stream
	SendAndClose(*DiskSpaceResponse) error
}

type drpcStorageDiskSpaceStream struct {
	drpc.Stream
}

func (x *drpcStorageDiskSpaceStream) SendAndClose(m *DiskSpaceResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCBandwidthClient interface {
	DRPCConn() drpc.Conn

	MonthSummary(ctx context.Context, in *BandwidthMonthSummaryRequest) (*BandwidthMonthSummaryResponse, error)
}

type drpcBandwidthClient struct {
	cc drpc.Conn
}

func NewDRPCBandwidthClient(cc drpc.Conn) DRPCBandwidthClient {
	return &drpcBandwidthClient{cc}
}

func (c *drpcBandwidthClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcBandwidthClient) MonthSummary(ctx context.Context, in *BandwidthMonthSummaryRequest) (*BandwidthMonthSummaryResponse, error) {
	out := new(BandwidthMonthSummaryResponse)
	err := c.cc.Invoke(ctx, "/multinode.Bandwidth/MonthSummary", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCBandwidthServer interface {
	MonthSummary(context.Context, *BandwidthMonthSummaryRequest) (*BandwidthMonthSummaryResponse, error)
}

type DRPCBandwidthDescription struct{}

func (DRPCBandwidthDescription) NumMethods() int { return 1 }

func (DRPCBandwidthDescription) Method(n int) (string, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/multinode.Bandwidth/MonthSummary",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCBandwidthServer).
					MonthSummary(
						ctx,
						in1.(*BandwidthMonthSummaryRequest),
					)
			}, DRPCBandwidthServer.MonthSummary, true
	default:
		return "", nil, nil, false
	}
}

func DRPCRegisterBandwidth(mux drpc.Mux, impl DRPCBandwidthServer) error {
	return mux.Register(impl, DRPCBandwidthDescription{})
}

type DRPCBandwidth_MonthSummaryStream interface {
	drpc.Stream
	SendAndClose(*BandwidthMonthSummaryResponse) error
}

type drpcBandwidthMonthSummaryStream struct {
	drpc.Stream
}

func (x *drpcBandwidthMonthSummaryStream) SendAndClose(m *BandwidthMonthSummaryResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCNodeClient interface {
	DRPCConn() drpc.Conn

	Version(ctx context.Context, in *VersionRequest) (*VersionResponse, error)
	LastContact(ctx context.Context, in *LastContactRequest) (*LastContactResponse, error)
	Reputation(ctx context.Context, in *ReputationRequest) (*ReputationResponse, error)
	TrustedSatellites(ctx context.Context, in *TrustedSatellitesRequest) (*TrustedSatellitesResponse, error)
}

type drpcNodeClient struct {
	cc drpc.Conn
}

func NewDRPCNodeClient(cc drpc.Conn) DRPCNodeClient {
	return &drpcNodeClient{cc}
}

func (c *drpcNodeClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcNodeClient) Version(ctx context.Context, in *VersionRequest) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/multinode.Node/Version", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcNodeClient) LastContact(ctx context.Context, in *LastContactRequest) (*LastContactResponse, error) {
	out := new(LastContactResponse)
	err := c.cc.Invoke(ctx, "/multinode.Node/LastContact", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcNodeClient) Reputation(ctx context.Context, in *ReputationRequest) (*ReputationResponse, error) {
	out := new(ReputationResponse)
	err := c.cc.Invoke(ctx, "/multinode.Node/Reputation", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcNodeClient) TrustedSatellites(ctx context.Context, in *TrustedSatellitesRequest) (*TrustedSatellitesResponse, error) {
	out := new(TrustedSatellitesResponse)
	err := c.cc.Invoke(ctx, "/multinode.Node/TrustedSatellites", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCNodeServer interface {
	Version(context.Context, *VersionRequest) (*VersionResponse, error)
	LastContact(context.Context, *LastContactRequest) (*LastContactResponse, error)
	Reputation(context.Context, *ReputationRequest) (*ReputationResponse, error)
	TrustedSatellites(context.Context, *TrustedSatellitesRequest) (*TrustedSatellitesResponse, error)
}

type DRPCNodeDescription struct{}

func (DRPCNodeDescription) NumMethods() int { return 4 }

func (DRPCNodeDescription) Method(n int) (string, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/multinode.Node/Version",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCNodeServer).
					Version(
						ctx,
						in1.(*VersionRequest),
					)
			}, DRPCNodeServer.Version, true
	case 1:
		return "/multinode.Node/LastContact",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCNodeServer).
					LastContact(
						ctx,
						in1.(*LastContactRequest),
					)
			}, DRPCNodeServer.LastContact, true
	case 2:
		return "/multinode.Node/Reputation",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCNodeServer).
					Reputation(
						ctx,
						in1.(*ReputationRequest),
					)
			}, DRPCNodeServer.Reputation, true
	case 3:
		return "/multinode.Node/TrustedSatellites",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCNodeServer).
					TrustedSatellites(
						ctx,
						in1.(*TrustedSatellitesRequest),
					)
			}, DRPCNodeServer.TrustedSatellites, true
	default:
		return "", nil, nil, false
	}
}

func DRPCRegisterNode(mux drpc.Mux, impl DRPCNodeServer) error {
	return mux.Register(impl, DRPCNodeDescription{})
}

type DRPCNode_VersionStream interface {
	drpc.Stream
	SendAndClose(*VersionResponse) error
}

type drpcNodeVersionStream struct {
	drpc.Stream
}

func (x *drpcNodeVersionStream) SendAndClose(m *VersionResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCNode_LastContactStream interface {
	drpc.Stream
	SendAndClose(*LastContactResponse) error
}

type drpcNodeLastContactStream struct {
	drpc.Stream
}

func (x *drpcNodeLastContactStream) SendAndClose(m *LastContactResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCNode_ReputationStream interface {
	drpc.Stream
	SendAndClose(*ReputationResponse) error
}

type drpcNodeReputationStream struct {
	drpc.Stream
}

func (x *drpcNodeReputationStream) SendAndClose(m *ReputationResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCNode_TrustedSatellitesStream interface {
	drpc.Stream
	SendAndClose(*TrustedSatellitesResponse) error
}

type drpcNodeTrustedSatellitesStream struct {
	drpc.Stream
}

func (x *drpcNodeTrustedSatellitesStream) SendAndClose(m *TrustedSatellitesResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCPayoutClient interface {
	DRPCConn() drpc.Conn

	Earned(ctx context.Context, in *EarnedRequest) (*EarnedResponse, error)
	EarnedPerSatellite(ctx context.Context, in *EarnedPerSatelliteRequest) (*EarnedPerSatelliteResponse, error)
}

type drpcPayoutClient struct {
	cc drpc.Conn
}

func NewDRPCPayoutClient(cc drpc.Conn) DRPCPayoutClient {
	return &drpcPayoutClient{cc}
}

func (c *drpcPayoutClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcPayoutClient) Earned(ctx context.Context, in *EarnedRequest) (*EarnedResponse, error) {
	out := new(EarnedResponse)
	err := c.cc.Invoke(ctx, "/multinode.Payout/Earned", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drpcPayoutClient) EarnedPerSatellite(ctx context.Context, in *EarnedPerSatelliteRequest) (*EarnedPerSatelliteResponse, error) {
	out := new(EarnedPerSatelliteResponse)
	err := c.cc.Invoke(ctx, "/multinode.Payout/EarnedPerSatellite", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCPayoutServer interface {
	Earned(context.Context, *EarnedRequest) (*EarnedResponse, error)
	EarnedPerSatellite(context.Context, *EarnedPerSatelliteRequest) (*EarnedPerSatelliteResponse, error)
}

type DRPCPayoutDescription struct{}

func (DRPCPayoutDescription) NumMethods() int { return 2 }

func (DRPCPayoutDescription) Method(n int) (string, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/multinode.Payout/Earned",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCPayoutServer).
					Earned(
						ctx,
						in1.(*EarnedRequest),
					)
			}, DRPCPayoutServer.Earned, true
	case 1:
		return "/multinode.Payout/EarnedPerSatellite",
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCPayoutServer).
					EarnedPerSatellite(
						ctx,
						in1.(*EarnedPerSatelliteRequest),
					)
			}, DRPCPayoutServer.EarnedPerSatellite, true
	default:
		return "", nil, nil, false
	}
}

func DRPCRegisterPayout(mux drpc.Mux, impl DRPCPayoutServer) error {
	return mux.Register(impl, DRPCPayoutDescription{})
}

type DRPCPayout_EarnedStream interface {
	drpc.Stream
	SendAndClose(*EarnedResponse) error
}

type drpcPayoutEarnedStream struct {
	drpc.Stream
}

func (x *drpcPayoutEarnedStream) SendAndClose(m *EarnedResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

type DRPCPayout_EarnedPerSatelliteStream interface {
	drpc.Stream
	SendAndClose(*EarnedPerSatelliteResponse) error
}

type drpcPayoutEarnedPerSatelliteStream struct {
	drpc.Stream
}

func (x *drpcPayoutEarnedPerSatelliteStream) SendAndClose(m *EarnedPerSatelliteResponse) error {
	if err := x.MsgSend(m); err != nil {
		return err
	}
	return x.CloseSend()
}

// --- DRPC END ---
